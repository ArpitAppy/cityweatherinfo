{"ast":null,"code":"var _jsxFileName = \"/Users/arpit.a/Desktop/cityweatherinfo/src/components/CityList.js\";\nimport React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Tabletop from 'tabletop';\nimport { cityList } from '../actions/';\nimport connect from 'react-redux';\n\nconst CityList = props => {\n  const [city, setCity] = useState();\n  const [selectedCity, setSelectedCity] = useState();\n\n  const getCity = () => {\n    Tabletop.init({\n      key: '1CV-Msh8kTYNg0D1wUyYC8LnwX1RJ_wBGxItQ_1JVkwc',\n      callback: cityData => {\n        // response.data.data.map((v) => ({id: v.id, label: v.cityName, value: v.cityName})\n        setCity(cityData.map(v => ({\n          id: v.id,\n          label: v.city_name,\n          value: v.city_name\n        })));\n      },\n      simpleSheet: true\n    });\n  };\n\n  const handleCitySelected = val => {\n    props.getCity(val);\n  };\n\n  useEffect(() => {\n    getCity();\n  }, []);\n  return React.createElement(Select, {\n    className: \"selectionBox\",\n    placeholder: \"Select City\",\n    options: city,\n    onChange: evt => this.handleCitySelected(evt),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  });\n}; // const mapDispatchToProps = () => {\n//     return null;\n// }\n// const mapStateToProps = (state) => {\n// const { selectedCity } = state \n//     return selectedCity;\n// }\n\n\nexport default CityList;","map":{"version":3,"sources":["/Users/arpit.a/Desktop/cityweatherinfo/src/components/CityList.js"],"names":["React","useState","useEffect","Select","Tabletop","cityList","connect","CityList","props","city","setCity","selectedCity","setSelectedCity","getCity","init","key","callback","cityData","map","v","id","label","city_name","value","simpleSheet","handleCitySelected","val","evt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,OAAP,MAAoB,aAApB;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,EAAhC;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,EAAhD;;AAEF,QAAMY,OAAO,GAAG,MAAM;AACpBT,IAAAA,QAAQ,CAACU,IAAT,CAAc;AACZC,MAAAA,GAAG,EAAE,8CADO;AAEZC,MAAAA,QAAQ,EAAEC,QAAQ,IAAI;AACpB;AACAP,QAAAA,OAAO,CAACO,QAAQ,CAACC,GAAT,CAAcC,CAAD,KAAQ;AACrBC,UAAAA,EAAE,EAAED,CAAC,CAACC,EADe;AAErBC,UAAAA,KAAK,EAAEF,CAAC,CAACG,SAFY;AAGrBC,UAAAA,KAAK,EAAEJ,CAAC,CAACG;AAHY,SAAR,CAAb,CAAD,CAAP;AAMD,OAVW;AAWZE,MAAAA,WAAW,EAAE;AAXD,KAAd;AAaD,GAdD;;AAgBA,QAAMC,kBAAkB,GAAIC,GAAD,IAAS;AAClClB,IAAAA,KAAK,CAACK,OAAN,CAAca,GAAd;AACD,GAFD;;AAIAxB,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,OAAO;AACR,GAFQ,EAEN,EAFM,CAAT;AAID,SACO,oBAAC,MAAD;AACI,IAAA,SAAS,EAAC,cADd;AAEI,IAAA,WAAW,EAAC,aAFhB;AAGI,IAAA,OAAO,EAAEJ,IAHb;AAII,IAAA,QAAQ,EAAGkB,GAAD,IAAS,KAAKF,kBAAL,CAAwBE,GAAxB,CAJvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADP;AAQA,CArCD,C,CAuCA;AACA;AACA;AAEA;AACA;AACA;AACA;;;AAEA,eAAepB,QAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Select from 'react-select';\nimport Tabletop from 'tabletop';\nimport {cityList} from '../actions/';\nimport connect from 'react-redux';\n\nconst CityList = (props) => {\n\n    const [city, setCity] = useState();\n    const [selectedCity, setSelectedCity] = useState();\n\n  const getCity = () => {\n    Tabletop.init({\n      key: '1CV-Msh8kTYNg0D1wUyYC8LnwX1RJ_wBGxItQ_1JVkwc',\n      callback: cityData => {\n        // response.data.data.map((v) => ({id: v.id, label: v.cityName, value: v.cityName})\n        setCity(cityData.map((v) => ({\n                id: v.id,\n                label: v.city_name,\n                value: v.city_name\n            }))\n        )\n      },\n      simpleSheet: true\n    })\n  }\n\n  const handleCitySelected = (val) => {\n    props.getCity(val)\n  }\n\n  useEffect(() => {\n    getCity();\n  }, [])\n    \n return(\n        <Select\n            className='selectionBox'\n            placeholder=\"Select City\" \n            options={city} \n            onChange={(evt) => this.handleCitySelected(evt)}\n        />\n    );\n}\n\n// const mapDispatchToProps = () => {\n//     return null;\n// }\n\n// const mapStateToProps = (state) => {\n// const { selectedCity } = state \n//     return selectedCity;\n// }\n\nexport default CityList;"]},"metadata":{},"sourceType":"module"}